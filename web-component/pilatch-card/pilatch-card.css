:root {
  /*
    TODO calculate scaled card height and width based on viewport width
    TODO calculate the pilatch-card-scale based on the relationship between the card height and scaled height,
    if possible, as pilatch-card.css uses that in a few places.
  */
}

pilatch-card .pilatch-card_container {
  display: inline-block;
  position: relative;
  height: calc(350px * 1);
  width: calc(250px * 1);
  /* entire container, keeps perspective */
  perspective: 1000px;
}

pilatch-card[binary] .pilatch-card_container {
  /* Binary cards are presented rotate ninety degrees, so width and height are swapped. */
  height: calc(250px * 1);
  width: calc(350px * 1);
}

pilatch-card[binary] .pilatch-card_front {
  background-position-x: calc(calc(-1 * calc(4100px * 1)) + calc(350px * 1));
  background-position-y: calc(-1 * calc(350px * 1));
}

pilatch-card[binary] .pilatch-card_back {
  background-position-x: calc(calc(-1 * calc(4100px * 1)) + calc(350px * 1));
  background-position-y: calc(calc(-1 * calc(350px * 1)) - calc(250px * 1));
}

pilatch-card[nothing] .pilatch-card_container {
  border: calc(2px * 1) dashed gray;
  border-radius: calc(6px * 1);
}

pilatch-card[nothing] .pilatch-card_front, pilatch-card[nothing] .pilatch-card_back {
  background: none;
}

pilatch-card[clickable] {
  cursor: pointer;
}

pilatch-card:not([up][known]) .pilatch-card_front {
  backface-visibility: visible;
}

pilatch-card:not([up][known]) .pilatch-card_back {
  opacity: 0.5;
}

pilatch-card .pilatch-card_front {
  backface-visibility: hidden;
  background-image: url(sprite.png);
  background-size: calc(4100px * 1) calc(1050px * 1);
  position: absolute;
  height: 100%;
  width: 100%;
}

pilatch-card .pilatch-card_back {
  backface-visibility: hidden;
  background-image: url(sprite.png);
  background-size: calc(4100px * 1) calc(1050px * 1);
  position: absolute;
  height: 100%;
  width: 100%;
}

pilatch-card:not([no-transition]) .pilatch-card_front {
  /* flip speed goes here */
  transition: transform 0.6s;
}

pilatch-card:not([no-transition]) .pilatch-card_back {
  /* flip speed goes here */
  transition: transform 0.6s;
}

pilatch-card .pilatch-card_back {
  background-position-x: calc(calc(-1 * calc(4100px * 1)) + calc(350px * 1));
  /* for firefox 31 */
  transform: rotateY(0deg);
  z-index: 2;
}

pilatch-card .pilatch-card_front {
  /* initially hidden pane */
  transform: rotateY(-180deg);
}

pilatch-card[suit='rock'] .pilatch-card_front {background-position-y: calc(-1 * calc(350px * 1));}

pilatch-card[suit='scissors'] .pilatch-card_front {background-position-y: calc(2 * calc(-1 * calc(350px * 1)));}

pilatch-card[rank='2'] .pilatch-card_front {background-position-x: calc(-1 * calc(250px * 1));}

pilatch-card[rank='3'] .pilatch-card_front {background-position-x: calc(-2 * calc(250px * 1));}

pilatch-card[rank='4'] .pilatch-card_front {background-position-x: calc(-3 * calc(250px * 1));}

pilatch-card[rank='5'] .pilatch-card_front {background-position-x: calc(-4 * calc(250px * 1));}

pilatch-card[rank='6'] .pilatch-card_front {background-position-x: calc(-5 * calc(250px * 1));}

pilatch-card[rank='7'] .pilatch-card_front {background-position-x: calc(-6 * calc(250px * 1));}

pilatch-card[rank='8'] .pilatch-card_front {background-position-x: calc(-7 * calc(250px * 1));}

pilatch-card[rank='9'] .pilatch-card_front {background-position-x: calc(-8 * calc(250px * 1));}

pilatch-card[rank='10'] .pilatch-card_front {background-position-x: calc(-9 * calc(250px * 1));}

pilatch-card[rank='11'] .pilatch-card_front {background-position-x: calc(-10 * calc(250px * 1));}

pilatch-card[rank='12'] .pilatch-card_front {background-position-x: calc(-11 * calc(250px * 1));}

pilatch-card[rank='13'] .pilatch-card_front {background-position-x: calc(-12 * calc(250px * 1));}

pilatch-card[rank='14'] .pilatch-card_front {background-position-x: calc(-13 * calc(250px * 1));}

pilatch-card[rank='15'] .pilatch-card_front {background-position-x: calc(-14 * calc(250px * 1));}

pilatch-card[up] .pilatch-card_back {
  transform: rotateY(180deg);
}

pilatch-card[up] .pilatch-card_front {
  transform: rotateY(0deg);
}
